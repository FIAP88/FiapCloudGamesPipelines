// <auto-generated />
using System;
using FiapCloudGamesAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FiapCloudGamesAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FiapCloudGamesAPI.Models.Avaliacao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME2");

                    b.Property<long>("IdJogo")
                        .HasColumnType("BIGINT");

                    b.Property<long>("IdUsuario")
                        .HasColumnType("BIGINT");

                    b.Property<int>("Nota")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("IdJogo");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Avaliacao", (string)null);
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.Categoria", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("Categoria", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Ação"
                        },
                        new
                        {
                            Id = 2L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Aventura"
                        },
                        new
                        {
                            Id = 3L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "RPG"
                        },
                        new
                        {
                            Id = 4L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Estratégia"
                        },
                        new
                        {
                            Id = 5L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Simulação"
                        },
                        new
                        {
                            Id = 6L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Esporte"
                        },
                        new
                        {
                            Id = 7L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Corrida"
                        },
                        new
                        {
                            Id = 8L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Puzzle"
                        },
                        new
                        {
                            Id = 9L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Tiro"
                        },
                        new
                        {
                            Id = 10L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Luta"
                        },
                        new
                        {
                            Id = 11L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Plataforma"
                        },
                        new
                        {
                            Id = 12L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Horror"
                        },
                        new
                        {
                            Id = 13L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Multiplayer"
                        },
                        new
                        {
                            Id = 14L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Indie"
                        },
                        new
                        {
                            Id = 15L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Casual"
                        },
                        new
                        {
                            Id = 16L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Aventura Gráfica"
                        },
                        new
                        {
                            Id = 17L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Roguelike"
                        },
                        new
                        {
                            Id = 18L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Battle Royale"
                        },
                        new
                        {
                            Id = 19L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "MOBA"
                        },
                        new
                        {
                            Id = 20L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Card Game"
                        },
                        new
                        {
                            Id = 21L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Visual Novel"
                        },
                        new
                        {
                            Id = 22L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Sandbox"
                        },
                        new
                        {
                            Id = 23L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Metroidvania"
                        },
                        new
                        {
                            Id = 24L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Survival"
                        },
                        new
                        {
                            Id = 25L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Open World"
                        },
                        new
                        {
                            Id = 26L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Hacking"
                        },
                        new
                        {
                            Id = 27L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Stealth"
                        },
                        new
                        {
                            Id = 28L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Narrativa"
                        },
                        new
                        {
                            Id = 29L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Co-op"
                        },
                        new
                        {
                            Id = 30L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "VR"
                        },
                        new
                        {
                            Id = 31L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "AR"
                        },
                        new
                        {
                            Id = 32L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Educational"
                        },
                        new
                        {
                            Id = 33L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Fitness"
                        },
                        new
                        {
                            Id = 34L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Music"
                        },
                        new
                        {
                            Id = 35L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Party"
                        },
                        new
                        {
                            Id = 36L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Trivia"
                        },
                        new
                        {
                            Id = 37L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Card"
                        },
                        new
                        {
                            Id = 38L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Board Game"
                        });
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.EmpresaFornecedora", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.HasKey("Id");

                    b.ToTable("EmpresaFornecedora", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AtualizadoPor = "",
                            CNPJ = "12345678000190",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "GameX Studios"
                        },
                        new
                        {
                            Id = 2L,
                            AtualizadoPor = "",
                            CNPJ = "98765432000191",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "AlphaGames Ltda"
                        });
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.Jogo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(true);

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.Property<long>("IdCategoria")
                        .HasColumnType("BIGINT");

                    b.Property<long>("IdFornecedor")
                        .HasColumnType("BIGINT");

                    b.Property<int>("IdadeMinima")
                        .HasColumnType("INT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.Property<int>("Preco")
                        .HasColumnType("INT");

                    b.Property<decimal>("Tamanho")
                        .HasColumnType("DECIMAL(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdFornecedor");

                    b.ToTable("Jogo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Ativo = true,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Game 1 Description",
                            IdCategoria = 1L,
                            IdFornecedor = 1L,
                            IdadeMinima = 10,
                            Nome = "Game1",
                            Preco = 100,
                            Tamanho = 10m
                        });
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.JogoUsuario", b =>
                {
                    b.Property<long>("UsuarioId")
                        .HasColumnType("BIGINT");

                    b.Property<long>("JogoId")
                        .HasColumnType("BIGINT");

                    b.HasKey("UsuarioId", "JogoId");

                    b.HasIndex("JogoId");

                    b.ToTable("JogoUsuario", (string)null);
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.Log", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasColumnType("VARCHAR(500)");

                    b.HasKey("Id");

                    b.ToTable("Log", (string)null);
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.Perfil", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.HasKey("Id");

                    b.ToTable("Perfil", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Administrador"
                        },
                        new
                        {
                            Id = 2L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Jogador"
                        });
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.PerfilPermissao", b =>
                {
                    b.Property<long>("IdPerfil")
                        .HasColumnType("BIGINT");

                    b.Property<long>("IdPermissao")
                        .HasColumnType("BIGINT");

                    b.HasKey("IdPerfil", "IdPermissao");

                    b.HasIndex("IdPermissao");

                    b.ToTable("PerfilPermissao", (string)null);

                    b.HasData(
                        new
                        {
                            IdPerfil = 1L,
                            IdPermissao = 1L
                        },
                        new
                        {
                            IdPerfil = 1L,
                            IdPermissao = 2L
                        },
                        new
                        {
                            IdPerfil = 1L,
                            IdPermissao = 3L
                        },
                        new
                        {
                            IdPerfil = 1L,
                            IdPermissao = 4L
                        },
                        new
                        {
                            IdPerfil = 1L,
                            IdPermissao = 5L
                        },
                        new
                        {
                            IdPerfil = 1L,
                            IdPermissao = 6L
                        },
                        new
                        {
                            IdPerfil = 1L,
                            IdPermissao = 7L
                        },
                        new
                        {
                            IdPerfil = 1L,
                            IdPermissao = 8L
                        },
                        new
                        {
                            IdPerfil = 1L,
                            IdPermissao = 9L
                        },
                        new
                        {
                            IdPerfil = 1L,
                            IdPermissao = 10L
                        },
                        new
                        {
                            IdPerfil = 1L,
                            IdPermissao = 11L
                        },
                        new
                        {
                            IdPerfil = 1L,
                            IdPermissao = 12L
                        },
                        new
                        {
                            IdPerfil = 1L,
                            IdPermissao = 13L
                        },
                        new
                        {
                            IdPerfil = 1L,
                            IdPermissao = 14L
                        },
                        new
                        {
                            IdPerfil = 1L,
                            IdPermissao = 15L
                        },
                        new
                        {
                            IdPerfil = 1L,
                            IdPermissao = 16L
                        },
                        new
                        {
                            IdPerfil = 1L,
                            IdPermissao = 17L
                        },
                        new
                        {
                            IdPerfil = 1L,
                            IdPermissao = 18L
                        },
                        new
                        {
                            IdPerfil = 1L,
                            IdPermissao = 19L
                        },
                        new
                        {
                            IdPerfil = 1L,
                            IdPermissao = 20L
                        },
                        new
                        {
                            IdPerfil = 1L,
                            IdPermissao = 21L
                        },
                        new
                        {
                            IdPerfil = 1L,
                            IdPermissao = 22L
                        },
                        new
                        {
                            IdPerfil = 1L,
                            IdPermissao = 23L
                        },
                        new
                        {
                            IdPerfil = 1L,
                            IdPermissao = 24L
                        },
                        new
                        {
                            IdPerfil = 1L,
                            IdPermissao = 25L
                        },
                        new
                        {
                            IdPerfil = 1L,
                            IdPermissao = 26L
                        },
                        new
                        {
                            IdPerfil = 1L,
                            IdPermissao = 27L
                        },
                        new
                        {
                            IdPerfil = 1L,
                            IdPermissao = 28L
                        },
                        new
                        {
                            IdPerfil = 1L,
                            IdPermissao = 29L
                        },
                        new
                        {
                            IdPerfil = 1L,
                            IdPermissao = 30L
                        },
                        new
                        {
                            IdPerfil = 1L,
                            IdPermissao = 31L
                        },
                        new
                        {
                            IdPerfil = 2L,
                            IdPermissao = 2L
                        },
                        new
                        {
                            IdPerfil = 2L,
                            IdPermissao = 25L
                        },
                        new
                        {
                            IdPerfil = 2L,
                            IdPermissao = 26L
                        },
                        new
                        {
                            IdPerfil = 2L,
                            IdPermissao = 28L
                        },
                        new
                        {
                            IdPerfil = 2L,
                            IdPermissao = 29L
                        },
                        new
                        {
                            IdPerfil = 2L,
                            IdPermissao = 13L
                        },
                        new
                        {
                            IdPerfil = 2L,
                            IdPermissao = 14L
                        },
                        new
                        {
                            IdPerfil = 2L,
                            IdPermissao = 30L
                        },
                        new
                        {
                            IdPerfil = 2L,
                            IdPermissao = 31L
                        });
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.Permissao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.HasKey("Id");

                    b.ToTable("Permissao", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "GerenciarJogos"
                        },
                        new
                        {
                            Id = 2L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "AvaliarJogos"
                        },
                        new
                        {
                            Id = 3L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "CriarJogos"
                        },
                        new
                        {
                            Id = 4L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "ListarUsuarios"
                        },
                        new
                        {
                            Id = 5L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "CriarUsuarios"
                        },
                        new
                        {
                            Id = 6L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "AtualizarUsuarios"
                        },
                        new
                        {
                            Id = 7L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "DeletarUsuarios"
                        },
                        new
                        {
                            Id = 8L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "GerenciarUsuarios"
                        },
                        new
                        {
                            Id = 9L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "GerenciarPermissoes"
                        },
                        new
                        {
                            Id = 10L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "GerenciarPerfil"
                        },
                        new
                        {
                            Id = 11L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "DeletarJogo"
                        },
                        new
                        {
                            Id = 12L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "AtualizarJogo"
                        },
                        new
                        {
                            Id = 13L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "BuscarJogos"
                        },
                        new
                        {
                            Id = 14L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "BuscarJogoPorId"
                        },
                        new
                        {
                            Id = 15L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "BuscarEmpresasFornecedoras"
                        },
                        new
                        {
                            Id = 16L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "CriarEmpresasFornecedoras"
                        },
                        new
                        {
                            Id = 17L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "BuscarEmpresasFornecedorasPorId"
                        },
                        new
                        {
                            Id = 18L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "AtualizarEmpresasFornecedoras"
                        },
                        new
                        {
                            Id = 19L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "DeletarEmpresasFornecedoras"
                        },
                        new
                        {
                            Id = 20L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "DeletarCategoria"
                        },
                        new
                        {
                            Id = 21L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "BuscarCategorias"
                        },
                        new
                        {
                            Id = 22L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "CriarCategoria"
                        },
                        new
                        {
                            Id = 23L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "BuscarCategoriaPorId"
                        },
                        new
                        {
                            Id = 24L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "AtualizarCategoria"
                        },
                        new
                        {
                            Id = 25L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "DeletarAvaliacao"
                        },
                        new
                        {
                            Id = 26L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "BuscarAvaliacoes"
                        },
                        new
                        {
                            Id = 27L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "BuscarAvaliacaoPorId"
                        },
                        new
                        {
                            Id = 28L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "CriarAvaliacao"
                        },
                        new
                        {
                            Id = 29L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "AtualizarAvaliacao"
                        },
                        new
                        {
                            Id = 30L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "MeusJogos"
                        },
                        new
                        {
                            Id = 31L,
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "AdicionarJogo"
                        });
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("DATETIME2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.Property<string>("HashSenha")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<long>("PerfilId")
                        .HasColumnType("BIGINT");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.HasIndex("Apelido")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PerfilId");

                    b.ToTable("Usuario", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Apelido = "joaos",
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataNascimento = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "joao@email.com",
                            HashSenha = "7+D7gmaWMXRYtMBOLDAtRSgnqJoQ5H62L1setgRLRCx68knp71V1pdUZV6KfWoiT",
                            Nome = "João",
                            PerfilId = 1L,
                            Sobrenome = "Silva"
                        },
                        new
                        {
                            Id = 2L,
                            Apelido = "gabriel",
                            AtualizadoPor = "",
                            CriadoPor = "system",
                            DataCriacao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataNascimento = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "gabriel@email.com",
                            HashSenha = "7+D7gmaWMXRYtMBOLDAtRSgnqJoQ5H62L1setgRLRCx68knp71V1pdUZV6KfWoiT",
                            Nome = "Gabriel",
                            PerfilId = 2L,
                            Sobrenome = "Silva"
                        });
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.Avaliacao", b =>
                {
                    b.HasOne("FiapCloudGamesAPI.Models.Jogo", "Jogo")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("IdJogo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FiapCloudGamesAPI.Models.Usuario", "Usuario")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jogo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.Jogo", b =>
                {
                    b.HasOne("FiapCloudGamesAPI.Models.Categoria", "Categoria")
                        .WithMany("Jogos")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FiapCloudGamesAPI.Models.EmpresaFornecedora", "EmpresaFornecedora")
                        .WithMany("Jogos")
                        .HasForeignKey("IdFornecedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("EmpresaFornecedora");
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.JogoUsuario", b =>
                {
                    b.HasOne("FiapCloudGamesAPI.Models.Jogo", "Jogo")
                        .WithMany("UsuariosDoJogo")
                        .HasForeignKey("JogoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FiapCloudGamesAPI.Models.Usuario", "Usuario")
                        .WithMany("JogosDoUsuario")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jogo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.PerfilPermissao", b =>
                {
                    b.HasOne("FiapCloudGamesAPI.Models.Perfil", "Perfil")
                        .WithMany("PerfilPermissoes")
                        .HasForeignKey("IdPerfil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FiapCloudGamesAPI.Models.Permissao", "Permissao")
                        .WithMany("PerfilPermissoes")
                        .HasForeignKey("IdPermissao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perfil");

                    b.Navigation("Permissao");
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.Usuario", b =>
                {
                    b.HasOne("FiapCloudGamesAPI.Models.Perfil", "Perfil")
                        .WithMany("Usuarios")
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.Categoria", b =>
                {
                    b.Navigation("Jogos");
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.EmpresaFornecedora", b =>
                {
                    b.Navigation("Jogos");
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.Jogo", b =>
                {
                    b.Navigation("Avaliacoes");

                    b.Navigation("UsuariosDoJogo");
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.Perfil", b =>
                {
                    b.Navigation("PerfilPermissoes");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.Permissao", b =>
                {
                    b.Navigation("PerfilPermissoes");
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.Usuario", b =>
                {
                    b.Navigation("Avaliacoes");

                    b.Navigation("JogosDoUsuario");
                });
#pragma warning restore 612, 618
        }
    }
}
