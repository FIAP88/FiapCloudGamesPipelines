// <auto-generated />
using System;
using FiapCloudGamesAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FiapCloudGamesAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250531011659_Start-Project")]
    partial class StartProject
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BibliotecaDoJogadorJogo", b =>
                {
                    b.Property<long>("BibliotecasId")
                        .HasColumnType("BIGINT");

                    b.Property<long>("JogosId")
                        .HasColumnType("BIGINT");

                    b.HasKey("BibliotecasId", "JogosId");

                    b.HasIndex("JogosId");

                    b.ToTable("BibliotecaDoJogadorJogo");
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.Avaliacao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<long>("IdJogo")
                        .HasColumnType("BIGINT");

                    b.Property<long>("IdUsuario")
                        .HasColumnType("BIGINT");

                    b.Property<int>("Nota")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("IdJogo");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Avaliacao", (string)null);
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.BibliotecaDoJogador", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<long>("IdJogo")
                        .HasColumnType("BIGINT");

                    b.Property<long>("IdUsuario")
                        .HasColumnType("BIGINT");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario")
                        .IsUnique();

                    b.ToTable("BibliotecaDoJogador", (string)null);
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.Categoria", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("Categoria", (string)null);
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.EmpresaFornecedora", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("CHAR(50)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.HasKey("Id");

                    b.ToTable("EmpresaFornecedora", (string)null);
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.Jogo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(true);

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.Property<long>("IdCategoria")
                        .HasColumnType("BIGINT");

                    b.Property<long>("IdFornecedor")
                        .HasColumnType("BIGINT");

                    b.Property<int>("IdadeMinima")
                        .HasColumnType("INT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.Property<int>("Preco")
                        .HasColumnType("INT");

                    b.Property<decimal>("Tamanho")
                        .HasColumnType("DECIMAL(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdFornecedor");

                    b.ToTable("Jogo", (string)null);
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.Log", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasColumnType("VARCHAR(500)");

                    b.HasKey("Id");

                    b.ToTable("Log", (string)null);
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.Perfil", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.HasKey("Id");

                    b.ToTable("Perfil", (string)null);
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.PerfilPermissao", b =>
                {
                    b.Property<long>("IdPerfil")
                        .HasColumnType("BIGINT");

                    b.Property<long>("IdPermissao")
                        .HasColumnType("BIGINT");

                    b.HasKey("IdPerfil", "IdPermissao");

                    b.HasIndex("IdPermissao");

                    b.ToTable("PerfilPermissao", (string)null);
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.Permissao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.HasKey("Id");

                    b.ToTable("Permissao", (string)null);
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.Property<string>("HashSenha")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<long>("PerfilId")
                        .HasColumnType("BIGINT");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PerfilId");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("BibliotecaDoJogadorJogo", b =>
                {
                    b.HasOne("FiapCloudGamesAPI.Models.BibliotecaDoJogador", null)
                        .WithMany()
                        .HasForeignKey("BibliotecasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FiapCloudGamesAPI.Models.Jogo", null)
                        .WithMany()
                        .HasForeignKey("JogosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.Avaliacao", b =>
                {
                    b.HasOne("FiapCloudGamesAPI.Models.Jogo", "Jogo")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("IdJogo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FiapCloudGamesAPI.Models.Usuario", "Usuario")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jogo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.BibliotecaDoJogador", b =>
                {
                    b.HasOne("FiapCloudGamesAPI.Models.Usuario", "Usuario")
                        .WithOne("Biblioteca")
                        .HasForeignKey("FiapCloudGamesAPI.Models.BibliotecaDoJogador", "IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.Jogo", b =>
                {
                    b.HasOne("FiapCloudGamesAPI.Models.Categoria", "Categoria")
                        .WithMany("Jogos")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FiapCloudGamesAPI.Models.EmpresaFornecedora", "EmpresaFornecedora")
                        .WithMany("Jogos")
                        .HasForeignKey("IdFornecedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("EmpresaFornecedora");
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.PerfilPermissao", b =>
                {
                    b.HasOne("FiapCloudGamesAPI.Models.Perfil", "Perfil")
                        .WithMany("PerfilPermissoes")
                        .HasForeignKey("IdPerfil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FiapCloudGamesAPI.Models.Permissao", "Permissao")
                        .WithMany("PerfilPermissoes")
                        .HasForeignKey("IdPermissao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perfil");

                    b.Navigation("Permissao");
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.Usuario", b =>
                {
                    b.HasOne("FiapCloudGamesAPI.Models.Perfil", "Perfil")
                        .WithMany("Usuarios")
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.Categoria", b =>
                {
                    b.Navigation("Jogos");
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.EmpresaFornecedora", b =>
                {
                    b.Navigation("Jogos");
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.Jogo", b =>
                {
                    b.Navigation("Avaliacoes");
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.Perfil", b =>
                {
                    b.Navigation("PerfilPermissoes");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.Permissao", b =>
                {
                    b.Navigation("PerfilPermissoes");
                });

            modelBuilder.Entity("FiapCloudGamesAPI.Models.Usuario", b =>
                {
                    b.Navigation("Avaliacoes");

                    b.Navigation("Biblioteca")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
